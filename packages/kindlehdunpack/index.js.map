{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2019/2/24.\n */\n\nimport path = require('path');\nimport { async as crossSpawnAsync, sync as crossSpawnSync } from 'cross-spawn-extra';\nimport fs = require('fs-extra');\nimport nanoid = require('nanoid');\nimport os = require('os');\nimport { Console } from 'debug-color2';\nimport moment = require('moment');\nimport FastGlob = require('fast-glob');\n\nconst console = new Console();\n\n__dirname = fs.realpathSync(__dirname);\n\nexport interface IOptions\n{\n\t/**\n\t * kindlehdunpack.exe\n\t */\n\tbin?: string,\n\tpaths?: string[],\n\texts?: string[],\n\n\ttmp?: string,\n\n\toutput?: string,\n\toutput_name?: string,\n\n\tcwd?: string,\n\n\tabsolute?: boolean,\n\n\tlog?: boolean,\n}\n\n/**\n * get kindlehdunpack by options\n */\nexport function binpath(options: IOptions = {}): string\n{\n\tif (options && options.bin)\n\t{\n\t\treturn options.bin\n\t}\n\telse\n\t{\n\t\tlet exts = [\n\t\t\t...(options && options.exts || []),\n\t\t\t'.exe',\n\t\t];\n\n\t\tlet file: string;\n\n\t\tlet bool = [\n\t\t\tcwdpath(options),\n\t\t\t...(options && options.paths || []),\n\t\t].some(function (dir)\n\t\t{\n\t\t\treturn dir != null && [\n\t\t\t\tdir,\n\t\t\t\tpath.join(dir, 'bin'),\n\t\t\t]\n\t\t\t\t.some(function (dir)\n\t\t\t\t{\n\t\t\t\t\treturn exts\n\t\t\t\t\t\t.some(function (ext)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile = path.join(dir, 'kindlehdunpack' + ext);\n\n\t\t\t\t\t\t\treturn ext != null && fs.pathExistsSync(file)\n\t\t\t\t\t\t})\n\t\t\t\t\t;\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\n\t\tif (bool)\n\t\t{\n\t\t\treturn file;\n\t\t}\n\n\t\treturn path.join(__dirname, 'bin', 'exe', 'kindlehdunpack.exe')\n\t}\n}\n\nexport function cwdpath(options: IOptions = {})\n{\n\tlet tmp = fs.realpathSync(options && options.cwd || process.cwd());\n\n\treturn tmp;\n}\n\nexport function tmppath(options: IOptions = {})\n{\n\tlet tmp: string = options && options.tmp;\n\n\tif (options && options.tmp === null)\n\t{\n\t\ttmp = cwdpath(options);\n\n\t\tif (tmp === __dirname)\n\t\t{\n\t\t\ttmp = path.join(__dirname, 'test/temp');\n\t\t\tfs.ensureDirSync(tmp);\n\t\t}\n\t}\n\n\ttmp = fs.realpathSync(tmp || os.tmpdir());\n\n\treturn tmp;\n}\n\nexport function outputpath(options: IOptions = {})\n{\n\tlet tmp: string;\n\n\tif (options && options.output)\n\t{\n\t\ttmp = fs.realpathSync(options.output);\n\t}\n\telse\n\t{\n\t\tlet p2 = cwdpath(options);\n\n\t\tlet name = options && options.output_name && options.output_name.length && options.output_name || 'HDimages-' + moment().format(`YYYY-MM-DD-hh-mm-ss-SSS`);\n\n\t\tif (__dirname === p2)\n\t\t{\n\t\t\ttmp = path.join(__dirname, 'test/temp', name)\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmp = path.join(p2, name)\n\t\t}\n\t}\n\n\treturn tmp;\n}\n\nexport function _spawn(file: string, options: IOptions = {})\n{\n\treturn crossSpawnSync(options.bin, [\n\t\tfile,\n\t], {\n\t\tencoding: 'buffer',\n\t\t//stdio: 'inherit',\n\t\tcwd: options.tmp,\n\t})\n}\n\nexport function listGlobFile(glob?: string[], options: IOptions = {})\n{\n\t//options = handleOptions(options);\n\n\tlet ls = FastGlob.sync<string>(glob || [\n\t\t'*.azw.res',\n\t\t'*.azw6',\n\t], {\n\t\tcwd: cwdpath(options),\n\t\tabsolute: options && options.absolute,\n\t});\n\n\treturn ls;\n}\n\nexport function handleGlobFile(glob?: string[], options: IOptions = {})\n{\n\toptions = options || {};\n\n\tconst output = options && options.output;\n\n\toptions.log && console.debug(`開始搜尋目標路徑`);\n\tlet files = listGlobFile(glob, options);\n\n\tif (files && files.length)\n\t{\n\t\toptions.log && console.gray.info(files);\n\n\t\thandleFiles(files, {\n\t\t\t...options,\n\t\t\toutput,\n\t\t});\n\n\t\toptions.log && console.debug(`結束`);\n\t}\n\telse\n\t{\n\t\toptions.log && console.error(`沒有找到任何符合的檔案`);\n\t\toptions.log && console.error(glob);\n\t}\n}\n\nexport function handleFiles(files: string[], options: IOptions = {})\n{\n\tconst output = options && options.output;\n\n\tfiles.forEach(function (file)\n\t{\n\t\thandleFile(file, {\n\t\t\t...options,\n\t\t\toutput,\n\t\t})\n\t});\n}\n\nexport function handleFile(file: string, options: IOptions = {})\n{\n\toptions = handleOptions(options);\n\n\tlet tmpPath = path.join(options.tmp, nanoid());\n\n\tlet _file = path.join(tmpPath, '~tmp.azw6');\n\tlet _dir = path.join(tmpPath, 'HDimages');\n\tlet _bin = path.join(tmpPath, 'kindlehdunpack.exe');\n\n\tfile = fs.realpathSync(file);\n\n\toptions.log && console.gray.info(`建立暫存資料夾\\n${tmpPath}`);\n\tfs.ensureDirSync(_dir);\n\n\tfs.copySync(options.bin, _bin);\n\tfs.copySync(file, _file);\n\n\toptions.log && console.debug(`開始處理\\n${file}`);\n\tlet cp = _spawn(_file, {\n\t\t...options,\n\n\t\tbin: _bin,\n\t\ttmp: tmpPath,\n\t});\n\n\toptions.log && console.debug(`輸出紀錄：`);\n\tlet log = Buffer.concat(cp.output.filter(v => v) as any);\n\n\tlet info = parseLog(log);\n\n\toptions.log && console.gray(log.toString());\n\n\tfs.writeFileSync(path.join(_dir, '~kindlehdunpack.log'), log);\n\n\tfs.writeFileSync(path.join(_dir, 'info.txt'), `書籍名稱：\\n${info.novel_title}\\n\\n${file}\\n${options.output}`);\n\n\tfs.moveSync(_dir, options.output);\n\n\toptions.log && console.gray.debug(`刪除暫存資料夾\\n${tmpPath}`);\n\tfs.removeSync(tmpPath);\n\n\toptions.log && console.success(`書籍名稱：\\n${info.novel_title}\\n\\n${file}\\n${options.output}`);\n}\n\nexport function parseLog(log: string | Buffer)\n{\n\tlog = log.toString();\n\n\tlet novel_title = (log.match(/^EXTH MetaData\\r?\\n([^\\r\\n]+)$/m) || [])[1];\n\n\treturn {\n\t\tnovel_title,\n\t}\n}\n\nexport function handleOptions<T extends IOptions>(options: T | IOptions = {}): T & IOptions\n{\n\t// @ts-ignore\n\toptions = options || {};\n\n\toptions.cwd = cwdpath(options);\n\toptions.bin = binpath(options);\n\toptions.tmp = tmppath(options);\n\toptions.output = outputpath(options);\n\n\t// @ts-ignore\n\treturn options\n}\n\nexport default exports as typeof import('./index');\n"]}